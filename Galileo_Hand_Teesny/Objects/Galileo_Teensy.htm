<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Galileo_Teensy.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Galileo_Teensy.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060061: Last Updated: Tue Mar 01 10:53:55 2016
<BR><P>
<H3>Maximum Stack Usage =        216 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; arm_fir_f32 &rArr; __aeabi_fmul
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[93]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[5]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">NMI_Handler</a><BR>
 <LI><a href="#[6]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">HardFault_Handler</a><BR>
 <LI><a href="#[7]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">MemManage_Handler</a><BR>
 <LI><a href="#[8]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">BusFault_Handler</a><BR>
 <LI><a href="#[9]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">UsageFault_Handler</a><BR>
 <LI><a href="#[a]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">SVC_Handler</a><BR>
 <LI><a href="#[b]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">DebugMon_Handler</a><BR>
 <LI><a href="#[c]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">PendSV_Handler</a><BR>
 <LI><a href="#[47]">ADC0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[47]">ADC0_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[47]">ADC0_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[48]">ADC1_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[8]">BusFault_Handler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[2c]">CAN0_Bus_Off_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[2d]">CAN0_Error_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[2b]">CAN0_ORed_Message_buffer_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[2f]">CAN0_Rx_Warning_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[2e]">CAN0_Tx_Warning_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[30]">CAN0_Wake_Up_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[49]">CMP0_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[4a]">CMP1_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[4b]">CMP2_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[4f]">CMT_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[5f]">DAC0_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[e]">DMA0_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[18]">DMA10_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[19]">DMA11_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[1a]">DMA12_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[1b]">DMA13_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[1c]">DMA14_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[1d]">DMA15_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[f]">DMA1_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[10]">DMA2_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[11]">DMA3_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[12]">DMA4_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[13]">DMA5_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[14]">DMA6_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[15]">DMA7_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[16]">DMA8_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[17]">DMA9_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[1e]">DMA_Error_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[b]">DebugMon_Handler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[6d]">DefaultISR</a> from startup_mk20d7.o(.text) referenced 145 times from startup_mk20d7.o(RESET)
 <LI><a href="#[20]">FTFL_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[4c]">FTM0_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[4d]">FTM1_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[4e]">FTM2_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[6]">HardFault_Handler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[26]">I2C0_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[27]">I2C1_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[32]">I2S0_Rx_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[31]">I2S0_Tx_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[23]">LLW_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[63]">LPTimer_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[22]">LVD_LVW_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[62]">MCG_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[1f]">MCM_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[7]">MemManage_Handler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[5]">NMI_Handler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[56]">PDB0_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[52]">PIT0_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[53]">PIT1_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[54]">PIT2_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[55]">PIT3_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[65]">PORTA_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[66]">PORTB_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[67]">PORTC_IRQHandler</a> from main.o(i.PORTC_IRQHandler) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[68]">PORTD_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[69]">PORTE_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[c]">PendSV_Handler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[50]">RTC_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[51]">RTC_Seconds_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[21]">Read_Collision_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[64]">Reserved102_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[6a]">Reserved108_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[6b]">Reserved109_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[25]">Reserved39_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[2a]">Reserved44_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[33]">Reserved53_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[34]">Reserved54_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[35]">Reserved55_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[36]">Reserved56_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[37]">Reserved57_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[38]">Reserved58_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[39]">Reserved59_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[45]">Reserved71_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[46]">Reserved72_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[59]">Reserved91_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[5a]">Reserved92_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[5b]">Reserved93_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[5c]">Reserved94_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[5d]">Reserved95_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[5e]">Reserved96_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[60]">Reserved98_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[4]">Reset_Handler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[28]">SPI0_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[29]">SPI1_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[a]">SVC_Handler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[6c]">SWI_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[d]">SysTick_Handler</a> from main.o(i.SysTick_Handler) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[6e]">SystemInit</a> from system_mk20d7.o(i.SystemInit) referenced from startup_mk20d7.o(.text)
 <LI><a href="#[61]">TSI0_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[3c]">UART0_ERR_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[3a]">UART0_LON_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[3b]">UART0_RX_TX_IRQHandler</a> from main.o(i.UART0_RX_TX_IRQHandler) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[3e]">UART1_ERR_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[3d]">UART1_RX_TX_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[40]">UART2_ERR_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[3f]">UART2_RX_TX_IRQHandler</a> from main.o(i.UART2_RX_TX_IRQHandler) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[42]">UART3_ERR_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[41]">UART3_RX_TX_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[44]">UART4_ERR_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[43]">UART4_RX_TX_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[57]">USB0_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[58]">USBDCD_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[9]">UsageFault_Handler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[24]">Watchdog_IRQHandler</a> from startup_mk20d7.o(.text) referenced from startup_mk20d7.o(RESET)
 <LI><a href="#[70]">__main</a> from __main.o(!!!main) referenced from startup_mk20d7.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[70]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[71]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[73]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[b7]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[b8]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[74]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[b9]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[78]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[ba]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[bb]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[bc]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[bd]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[be]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[bf]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[c0]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[c1]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[c2]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[c3]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[c4]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[c5]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[c6]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[c7]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[c8]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[c9]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[ca]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[cb]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[cc]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[cd]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[ce]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[7d]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[cf]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[d0]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[d1]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[d2]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[d3]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[d4]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[d5]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[72]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[d6]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[75]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[77]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[d7]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[79]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; arm_fir_f32 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[d8]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[94]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[7c]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[d9]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[7e]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[4]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>ADC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>CAN0_Bus_Off_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>CAN0_Error_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>CAN0_ORed_Message_buffer_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>CAN0_Rx_Warning_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>CAN0_Tx_Warning_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>CAN0_Wake_Up_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>CMP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>CMP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CMP2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>CMT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>DAC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>DMA3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>DMA4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>DMA5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>DMA6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>DMA_Error_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>DefaultISR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>FTFL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>FTM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>FTM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>FTM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>I2S0_Rx_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>I2S0_Tx_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>LLW_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>LPTimer_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>LVD_LVW_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>MCG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>MCM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>PDB0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>PIT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>PIT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>PIT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>PIT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>PORTA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>PORTB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>PORTD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>PORTE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>RTC_Seconds_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>Read_Collision_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>Reserved102_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>Reserved108_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>Reserved109_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>Reserved39_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>Reserved44_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>Reserved53_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>Reserved54_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>Reserved55_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>Reserved56_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>Reserved57_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>Reserved58_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>Reserved59_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>Reserved71_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>Reserved72_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>Reserved91_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>Reserved92_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>Reserved93_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>Reserved94_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>Reserved95_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>Reserved96_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>Reserved98_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>SWI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>TSI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>UART0_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>UART0_LON_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART1_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>UART1_RX_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>UART2_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>UART3_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>UART3_RX_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>UART4_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>UART4_RX_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>USB0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>USBDCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>Watchdog_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk20d7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_mk20d7.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[a8]"></a>arm_abs_f32</STRONG> (Thumb, 150 bytes, Stack size 12 bytes, arm_abs_f32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = arm_abs_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a9]"></a>arm_abs_q31</STRONG> (Thumb, 232 bytes, Stack size 16 bytes, arm_abs_q31.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = arm_abs_q31
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[80]"></a>arm_fir_f32</STRONG> (Thumb, 2274 bytes, Stack size 192 bytes, arm_fir_f32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = arm_fir_f32 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[83]"></a>arm_fir_init_f32</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, arm_fir_init_f32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = arm_fir_init_f32 &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[85]"></a>arm_fir_init_q31</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, arm_fir_init_q31.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = arm_fir_init_q31 &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[aa]"></a>arm_fir_q31</STRONG> (Thumb, 786 bytes, Stack size 76 bytes, arm_fir_q31.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = arm_fir_q31
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[86]"></a>arm_mean_f32</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, arm_mean_f32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = arm_mean_f32 &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[89]"></a>arm_mean_q31</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, arm_mean_q31.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = arm_mean_q31 &rArr; __aeabi_ldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a2]"></a>arm_fill_f32</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, arm_fill_f32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = arm_fill_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8b]"></a>arm_float_to_q31</STRONG> (Thumb, 340 bytes, Stack size 24 bytes, arm_float_to_q31.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = arm_float_to_q31 &rArr; __aeabi_f2lz
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2lz
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8e]"></a>arm_q31_to_float</STRONG> (Thumb, 392 bytes, Stack size 40 bytes, arm_q31_to_float.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = arm_q31_to_float
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8a]"></a>__aeabi_ldivmod</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mean_q31
</UL>

<P><STRONG><a name="[90]"></a>_ll_sdiv</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, llsdiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[84]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_init_q31
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_init_f32
</UL>

<P><STRONG><a name="[da]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[db]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[dc]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[dd]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[de]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[df]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[91]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_sdiv
</UL>

<P><STRONG><a name="[e0]"></a>_ll_udiv</STRONG> (Thumb, 238 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)

<P><STRONG><a name="[76]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[7b]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[e1]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[92]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[e2]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[7f]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[e3]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[e4]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[e5]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[a6]"></a>ADC0_Init</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, drivers.o(i.ADC0_Init))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9d]"></a>ADC0_Read</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, drivers.o(i.ADC0_Read))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[95]"></a>EasyVR_Init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, easyvr.o(i.EasyVR_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EasyVR_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_send
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[97]"></a>EasyVR_Read</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, easyvr.o(i.EasyVR_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EasyVR_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_send
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_RX_TX_IRQHandler
</UL>

<P><STRONG><a name="[a1]"></a>EasyVR_Speech</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, easyvr.o(i.EasyVR_Speech))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_RX_TX_IRQHandler
</UL>

<P><STRONG><a name="[98]"></a>EasyVR_Start</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, easyvr.o(i.EasyVR_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EasyVR_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_send
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTC_IRQHandler
</UL>

<P><STRONG><a name="[a4]"></a>FTM0_Init</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, drivers.o(i.FTM0_Init))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a5]"></a>FTM1_Init</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, drivers.o(i.FTM1_Init))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a3]"></a>LED_Init</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, drivers.o(i.LED_Init))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a7]"></a>LED_Off</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, drivers.o(i.LED_Off))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9c]"></a>LED_Toggle</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, drivers.o(i.LED_Toggle))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[67]"></a>PORTC_IRQHandler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, main.o(i.PORTC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PORTC_IRQHandler &rArr; EasyVR_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_putString
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyVR_Start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[9a]"></a>Switch_Init</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, drivers.o(i.Switch_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Switch_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d]"></a>SysTick_Handler</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, main.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SysTick_Handler &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Toggle
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>SystemInit</STRONG> (Thumb, 340 bytes, Stack size 0 bytes, system_mk20d7.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(.text)
</UL>
<P><STRONG><a name="[9e]"></a>UART0_Init</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, drivers.o(i.UART0_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART0_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3b]"></a>UART0_RX_TX_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.UART0_RX_TX_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[99]"></a>UART0_putString</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, drivers.o(i.UART0_putString))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = UART0_putString
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_send
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_RX_TX_IRQHandler
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTC_IRQHandler
</UL>

<P><STRONG><a name="[9f]"></a>UART0_send</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, drivers.o(i.UART0_send))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_putString
</UL>

<P><STRONG><a name="[a0]"></a>UART2_Init</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, drivers.o(i.UART2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART2_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3f]"></a>UART2_RX_TX_IRQHandler</STRONG> (Thumb, 268 bytes, Stack size 8 bytes, main.o(i.UART2_RX_TX_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART2_RX_TX_IRQHandler &rArr; EasyVR_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_putString
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyVR_Speech
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyVR_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk20d7.o(RESET)
</UL>
<P><STRONG><a name="[96]"></a>UART2_send</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, drivers.o(i.UART2_send))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyVR_Start
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyVR_Read
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyVR_Init
</UL>

<P><STRONG><a name="[7a]"></a>main</STRONG> (Thumb, 364 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = main &rArr; arm_fir_f32 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_q31_to_float
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mean_q31
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mean_f32
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_float_to_q31
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_q31
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_init_q31
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_init_f32
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_f32
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fill_f32
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_abs_q31
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_abs_f32
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Init
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Off
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTM1_Init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTM0_Init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyVR_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[82]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mean_f32
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_float_to_q31
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_f32
</UL>

<P><STRONG><a name="[ab]"></a>_fadd</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[af]"></a>__fpl_fcheck_NaN1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fcheck1.o(x$fpl$fcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
</UL>

<P><STRONG><a name="[88]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fdiv.o(x$fpl$fdiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mean_f32
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[b1]"></a>_fdiv</STRONG> (Thumb, 384 bytes, Stack size 16 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[8f]"></a>__aeabi_i2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_q31_to_float
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[e6]"></a>_fflt</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt), UNUSED)

<P><STRONG><a name="[87]"></a>__aeabi_ui2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mean_f32
</UL>

<P><STRONG><a name="[e7]"></a>_ffltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu), UNUSED)

<P><STRONG><a name="[81]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_f32
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[b2]"></a>_fmul</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[ae]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_sfrom_f
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[ad]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[e8]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)

<P><STRONG><a name="[b3]"></a>_fsub</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[8d]"></a>__aeabi_f2lz</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ffixll.o(x$fpl$llsfromf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2lz
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_float_to_q31
</UL>

<P><STRONG><a name="[b5]"></a>_ll_sfrom_f</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, ffixll.o(x$fpl$llsfromf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[b0]"></a>__fpl_return_NaN</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
</UL>

<P><STRONG><a name="[8c]"></a>__ARM_scalbnf</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, scalbnf.o(x$fpl$scalbnf))
<BR><BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_q31_to_float
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_float_to_q31
</UL>

<P><STRONG><a name="[b6]"></a>__fpl_cmpreturn</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[9b]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, drivers.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Init
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Init
</UL>

<P><STRONG><a name="[b4]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
</UL>

<P><STRONG><a name="[ac]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
